"""

Revision ID: 1b1606845f09
Revises:
Create Date: 2024-07-16 07:02:10.256374

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1b1606845f09"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "assets_pairs",
        sa.Column("pair_name", sa.String(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("pair_name"),
    )
    op.create_table(
        "balances",
        sa.Column("asset", sa.String(), nullable=False),
        sa.Column("amount", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("asset"),
    )
    op.create_table(
        "consolidated_open_positions",
        sa.Column("pair", sa.String(), nullable=True),
        sa.Column("positions", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("leverage", sa.String(), nullable=True),
        sa.Column("cost", sa.String(), nullable=True),
        sa.Column("fee", sa.String(), nullable=True),
        sa.Column("vol", sa.String(), nullable=True),
        sa.Column("vol_closed", sa.String(), nullable=True),
        sa.Column("margin", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("net", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("pair"),
    )
    op.create_index(
        op.f("ix_consolidated_open_positions_pair"),
        "consolidated_open_positions",
        ["pair"],
        unique=False,
    )
    op.create_table(
        "ledgers",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("aclass", sa.String(), nullable=False),
        sa.Column("amount", sa.String(), nullable=False),
        sa.Column("asset", sa.String(), nullable=False),
        sa.Column("balance", sa.String(), nullable=False),
        sa.Column("fee", sa.String(), nullable=False),
        sa.Column("refid", sa.String(), nullable=False),
        sa.Column("time", sa.Float(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("subtype", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ledgers_id"), "ledgers", ["id"], unique=False)
    op.create_table(
        "orders_descriptions",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("pair", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("ordertype", sa.String(), nullable=False),
        sa.Column("price", sa.String(), nullable=False),
        sa.Column("price2", sa.String(), nullable=False),
        sa.Column("leverage", sa.String(), nullable=True),
        sa.Column("order", sa.Text(), nullable=False),
        sa.Column("close", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trade_balance",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("timestamp", sa.Float(), nullable=False),
        sa.Column("eb", sa.String(), nullable=False),
        sa.Column("tb", sa.String(), nullable=False),
        sa.Column("m", sa.String(), nullable=False),
        sa.Column("uv", sa.String(), nullable=True),
        sa.Column("n", sa.String(), nullable=False),
        sa.Column("c", sa.String(), nullable=False),
        sa.Column("v", sa.String(), nullable=False),
        sa.Column("e", sa.String(), nullable=False),
        sa.Column("mf", sa.String(), nullable=False),
        sa.Column("ml", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "open_positions",
        sa.Column("trade_id", sa.String(), nullable=True),
        sa.Column("ordertxid", sa.String(), nullable=True),
        sa.Column("posstatus", sa.String(), nullable=True),
        sa.Column("pair", sa.String(), nullable=False),
        sa.Column("time", sa.Float(), nullable=True),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("ordertype", sa.String(), nullable=True),
        sa.Column("cost", sa.String(), nullable=False),
        sa.Column("fee", sa.String(), nullable=False),
        sa.Column("vol", sa.String(), nullable=False),
        sa.Column("vol_closed", sa.String(), nullable=False),
        sa.Column("margin", sa.String(), nullable=False),
        sa.Column("terms", sa.String(), nullable=True),
        sa.Column("rollovertm", sa.String(), nullable=True),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("net", sa.String(), nullable=False),
        sa.Column("misc", sa.Text(), nullable=True),
        sa.Column("oflags", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pair"],
            ["consolidated_open_positions.pair"],
        ),
        sa.PrimaryKeyConstraint("trade_id"),
    )
    op.create_index(
        op.f("ix_open_positions_trade_id"), "open_positions", ["trade_id"], unique=False
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("refid", sa.String(), nullable=True),
        sa.Column("userref", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("opentm", sa.Float(), nullable=False),
        sa.Column("closetm", sa.Float(), nullable=True),
        sa.Column("starttm", sa.Float(), nullable=True),
        sa.Column("expiretm", sa.Float(), nullable=True),
        sa.Column("descr_id", sa.String(), nullable=False),
        sa.Column("vol", sa.String(), nullable=False),
        sa.Column("vol_exec", sa.String(), nullable=False),
        sa.Column("cost", sa.String(), nullable=False),
        sa.Column("fee", sa.String(), nullable=False),
        sa.Column("price", sa.String(), nullable=False),
        sa.Column("stopprice", sa.String(), nullable=False),
        sa.Column("limitprice", sa.String(), nullable=False),
        sa.Column("misc", sa.String(), nullable=True),
        sa.Column("oflags", sa.String(), nullable=False),
        sa.Column("margin", sa.String(), nullable=True),
        sa.Column("reason", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["descr_id"],
            ["orders_descriptions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trade_info",
        sa.Column("id", sa.String(), nullable=True),
        sa.Column("trade_id", sa.Integer(), nullable=False),
        sa.Column("ordertxid", sa.String(), nullable=False),
        sa.Column("postxid", sa.String(), nullable=False),
        sa.Column("pair", sa.String(), nullable=False),
        sa.Column("time", sa.Float(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("ordertype", sa.String(), nullable=False),
        sa.Column("price", sa.String(), nullable=False),
        sa.Column("cost", sa.String(), nullable=False),
        sa.Column("fee", sa.String(), nullable=False),
        sa.Column("vol", sa.String(), nullable=False),
        sa.Column("margin", sa.String(), nullable=False),
        sa.Column("leverage", sa.String(), nullable=True),
        sa.Column("misc", sa.String(), nullable=True),
        sa.Column("maker", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ordertxid"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_trade_info_id"), "trade_info", ["id"], unique=False)
    op.create_table(
        "trades_history",
        sa.Column("id", sa.String(), nullable=True),
        sa.Column("tradeinfo_id", sa.String(), nullable=False),
        sa.Column("posstatus", sa.String(), nullable=True),
        sa.Column("cprice", sa.Float(), nullable=True),
        sa.Column("ccost", sa.Float(), nullable=True),
        sa.Column("cfee", sa.Float(), nullable=True),
        sa.Column("cvol", sa.Float(), nullable=True),
        sa.Column("cmargin", sa.Float(), nullable=True),
        sa.Column("net", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tradeinfo_id"],
            ["trade_info.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_trades_history_id"), "trades_history", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_trades_history_id"), table_name="trades_history")
    op.drop_table("trades_history")
    op.drop_index(op.f("ix_trade_info_id"), table_name="trade_info")
    op.drop_table("trade_info")
    op.drop_table("orders")
    op.drop_index(op.f("ix_open_positions_trade_id"), table_name="open_positions")
    op.drop_table("open_positions")
    op.drop_table("trade_balance")
    op.drop_table("orders_descriptions")
    op.drop_index(op.f("ix_ledgers_id"), table_name="ledgers")
    op.drop_table("ledgers")
    op.drop_index(
        op.f("ix_consolidated_open_positions_pair"),
        table_name="consolidated_open_positions",
    )
    op.drop_table("consolidated_open_positions")
    op.drop_table("balances")
    op.drop_table("assets_pairs")
    # ### end Alembic commands ###
